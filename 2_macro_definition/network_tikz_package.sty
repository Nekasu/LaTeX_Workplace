% mytikzpackage.sty - A custom package for drawing rounded rectangles with TikZ

% Package declaration and requirements
\ProvidesPackage{network_tikz_package}[2024/08/07 v1.0 A custom package for nueral network with TikZ]

% Load necessary packages
\RequirePackage{tikz}
\RequirePackage{fp}
\RequirePackage{ifthen}
\usetikzlibrary{calc}

% Define color
\definecolor{NekasuBlue}{HTML}{6495ED}

% Define single rounded rectangle command
\newcommand{\rSquare}[6]{
    % 使用时需要注意, 各个参数的单位应该保持一致, 不要一些坐标加了cm单位, 一些没有加
    % Parameters:
    % 1: Length and width of the rounded rectangle
    % 2: Fill color
    % 3: Fill color opacity
    % 4: Radius of the rounded corners
    % 5: Starting x-coordinate
    % 6: Starting y-coordinate


    % Define the coordinates of the four corners of the rectangle
    % \coordinate (#7_left_bottom_A) at (#5, #6);
    % \coordinate (#7_right_bottom_B) at (#5+#1, #6);
    % \coordinate (#7_right_upper_C) at (#5+#1, #1+#6);
    % \coordinate (#7_left_upper_D) at (#5, #1+#6);

    \draw[fill=#2!#3, ultra thin, rounded corners=#4] (#5, #6) rectangle (#5+#1, #1+#6);
}

\newcommand{\rSquareSet}[9]{
    % 使用时需要注意, 各个参数的单位应该保持一致, 不要一些坐标加了cm单位, 一些没有加
    % Parameters:
    % 1: Length and width of the rounded rectangles
    % 2: Fill color
    % 3: Fill color opacity
    % 4: Radius of the rounded corners
    % 5: Starting x-coordinate
    % 6: Starting y-coordinate
    % 7: x, y offset between each rounded rectangle, these two values are equal
    % 8: Name of this set of rounded rectangles
    % 9: y-direction distance between the set of rounded rectangles and its name

    % Draw a set of 3 rounded rectangles
    \rSquare{#1}{#2}{#3}{#4}{#5+#7}{#6+#7};
    \rSquare{#1}{#2}{#3}{#4}{#5}{#6};
    \rSquare{#1}{#2}{#3}{#4}{#5-#7}{#6-#7};

    % Define coordinates for arrows
    \coordinate (#8_left) at  (#5-#7-#9, #6+#1/2);
    \coordinate (#8_right) at   (#5+#7+#1+#9, #6+#1/2);
    \coordinate (#8_top) at    (#5+#1/2, #6+#7+#1+#9);
    \coordinate (#8_bottom) at (#5+#1/2, #6-#7-#9);


    \node at (#8_left) {left};
    \node at (#8_right) {left};
    \node at (#8_top) {top};
    \node at (#8_bottom) {#8};
}

\newcommand{\networkLayer}[9]{
	% Define the macro.
    %from https://www.cnblogs.com/pprp/p/13678535.html
	% 1st argument: Height and width of the layer rectangle slice.
	% 2nd argument: Depth of the layer slice
	% 3rd argument: X Offset --> use it to offset layers from previously drawn layers., 两个层之间的x偏移量
	% 4th argument: Y Offset --> Use it when an output needs to be fed to multiple layers that are on the same X offset.
	% 5th argument: Z Offset --> Use to offset layers from previous 
	% 6th argument: Options for filldraw.
	% 7th argument: Text to be placed below this layer.
	% 8th argument: Name of coordinates. When name = "start" this resets the offset counter
	% 9th argument: list of nodes to connect to (previous layers)
	% 全局变量
    \def\totalOffset{0}
	\xdef\totalOffset{\totalOffset}
 	\ifthenelse{\equal{#8} {start}}
 	{\FPset{\totalOffset}{0}}
 	{}
 	\FPeval\currentOffset{0+(\totalOffset)+(#3)}

	\def\hw{#1} % Used to distinguish input resolution for current layer.
	\def\b{0.02}
	\def\c{#2} % Width of the cube to distinguish number of input channels for current layer.
	\def\x{\currentOffset} % X offset for current layer.
	\def\y{#4} % Y offset for current layer.
	\def\z{#5} % Z offset for current layer.
	\def\inText{#7}

    % Define references to points on the cube surfaces
    \coordinate (#8_front) at  (\x+\c  , \z      , \y);
    \coordinate (#8_back) at   (\x     , \z      , \y);
    \coordinate (#8_top) at    (\x+\c/2, \z+\hw/2, \y);
    \coordinate (#8_bottom) at (\x+\c/2, \z-\hw/2, \y);
    
 	% Define cube coords
	\coordinate (blr) at (\c+\x,  -\hw/2+\z,  -\hw/2+\y); %back lower right
	\coordinate (bur) at (\c+\x,   \hw/2+\z,  -\hw/2+\y); %back upper right
	\coordinate (bul) at (0 +\x,   \hw/2+\z,  -\hw/2+\y); %back upper left
	\coordinate (fll) at (0 +\x,  -\hw/2+\z,   \hw/2+\y); %front lower left
	\coordinate (flr) at (\c+\x,  -\hw/2+\z,   \hw/2+\y); %front lower right
	\coordinate (fur) at (\c+\x,   \hw/2+\z,   \hw/2+\y); %front upper right
	\coordinate (ful) at (0 +\x,   \hw/2+\z,   \hw/2+\y); %front upper left
	

    % Draw connections from other points to the back of this node
    \ifthenelse{\equal{#9} {}}
 	{} % 为空什么都不做
 	{ % 非空 开始画层与层之间的连线
 	    \foreach \val in #9
 	    % \val = start_front
 	        \draw[line width=0.3mm] (\val)--(#8_back);
 	}
 	
	% Draw the layer body.
	% back plane
	\draw[line width=0.3mm](blr) -- (bur) -- (bul);
	% front plane
	\draw[line width=0.3mm](fll) -- (flr) node[midway,below] {\inText} -- (fur) -- (ful) -- (fll);
	\draw[line width=0.3mm](blr) -- (flr);
	\draw[line width=0.3mm](bur) -- (fur);
	\draw[line width=0.3mm](bul) -- (ful);

	% Recolor visible surfaces
	% front plane
	\filldraw[#6] ($(fll)+(\b,\b,0)$) -- ($(flr)+(-\b,\b,0)$) -- ($(fur)+(-\b,-\b,0)$) -- ($(ful)+(\b,-\b,0)$) -- ($(fll)+(\b,\b,0)$);
	\filldraw[#6] ($(ful)+(\b,0,-\b)$) -- ($(fur)+(-\b,0,-\b)$) -- ($(bur)+(-\b,0,\b)$) -- ($(bul)+(\b,0,\b)$);

	% Colored slice.
	\ifthenelse {\equal{#6} {}}
	{} % Do not draw colored slice if #6 is blank.
	% Else, draw a colored slice.
	{\filldraw[#6] ($(flr)+(0,\b,-\b)$) -- ($(blr)+(0,\b,\b)$) -- ($(bur)+(0,-\b,\b)$) -- ($(fur)+(0,-\b,-\b)$);}

	\FPeval\totalOffset{0+(currentOffset)+\c}

	% \draw[ultra thick, red] (#8_back) circle[radius=0.02];
	% \node[left] at (#8_back) {back};
	
	% \draw[ultra thick, red] (#8_top) circle[radius=0.02];
	% \node[above] at (#8_top) {top};
	
	% \draw[ultra thick, red] (#8_bottom) circle[radius=0.02];
	% \node[below] at (#8_bottom) {bottom};
	
	% \draw[ultra thick, red] (#8_front) circle[radius=0.02];
	% \node[left] at (#8_front) {front};
}

% \newcommand{\centeredSquare}[3]{
%     % 以中点坐标作为定位, 绘制一个正方形
%     % 参数1：正方形的中点x坐标
%     % 参数2：正方形的中点y坐标
%     % 参数3：正方形的边长

%     \draw
% }

% Ensure the package is loaded only once
\endinput
